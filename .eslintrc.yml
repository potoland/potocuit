root: true
env:
    browser: true
    es2020: true
    node: true

extends:
    - 'prettier'
    - 'eslint:recommended'
    - 'plugin:@typescript-eslint/eslint-recommended'
    - 'plugin:@typescript-eslint/recommended'

ignorePatterns:
    - 'node_modules'
    - 'dist'
    - 'coverage'
    - '**/*.js'
    - '**/*.d.ts'
    - '__tests__'
    - '__test__'

parser: '@typescript-eslint/parser'

parserOptions:
    project: './packages/**/tsconfig.json'
    sourceType: 'module'

plugins:
    - '@typescript-eslint'

# silly eslint bug
overrides:
    - files: ['*.ts']
      rules:
          no-undef: 'off'

rules:
    '@typescript-eslint/consistent-type-imports': 'error'
    '@typescript-eslint/no-import-type-side-effects': 'error'
    '@typescript-eslint/no-duplicate-imports': 'error'
    '@typescript-eslint/prefer-optional-chain': 'error'
    '@typescript-eslint/no-explicit-any': 'off'
    '@typescript-eslint/explicit-function-return-type': 'off'
    '@typescript-eslint/no-non-null-assertion': 'off'
    '@typescript-eslint/ban-ts-comment': 'off'
    '@typescript-eslint/no-unused-vars': 'off'
    '@typescript-eslint/naming-convention':
        - 'error'
        - selector: 'default'
          format: null
        - selector: 'variable'
          format:
            - 'camelCase'
            - 'PascalCase'
            - 'UPPER_CASE'
        - selector: 'typeLike'
          format: ['PascalCase']

    '@typescript-eslint/explicit-module-boundary-types': 'off'
	# estaba en 'off' y aun asi
    '@typescript-eslint/no-empty-interface':
        - 'error'
        - allowSingleExtends: true
    '@typescript-eslint/adjacent-overload-signatures': 'error'
    '@typescript-eslint/consistent-type-assertions': 'error'
    '@typescript-eslint/no-array-constructor': 'error'
    '@typescript-eslint/no-empty-function': 'error'
    '@typescript-eslint/no-inferrable-types': 'error'
    '@typescript-eslint/no-misused-new': 'off'
    '@typescript-eslint/no-namespace': 'error'
    '@typescript-eslint/no-this-alias': 'error'
    '@typescript-eslint/no-use-before-define': 'off'
    '@typescript-eslint/no-var-requires': 'error'
    '@typescript-eslint/triple-slash-reference': 'error'
    '@typescript-eslint/type-annotation-spacing': 'error'
    '@typescript-eslint/array-type': 'error'
    '@typescript-eslint/no-unnecessary-qualifier': 'error'
    '@typescript-eslint/no-unnecessary-type-arguments': 'off' # disabled as it started to be buggy
    '@typescript-eslint/quotes':
        - 'error'
        - 'single'
        - avoidEscape: true
          allowTemplateLiterals: true

    '@typescript-eslint/semi':
        - 'error'
        - 'always'

    '@typescript-eslint/no-useless-constructor': 'off'
    '@typescript-eslint/no-redeclare':
      - 'error'

    '@typescript-eslint/member-delimiter-style':
        - 'error'
        - multiline:
              delimiter: 'semi'
              requireLast: true
          singleline:
              delimiter: 'semi'
              requireLast: false

    '@typescript-eslint/space-before-function-paren':
        - 'error'
        - anonymous: 'always'
          named: 'never'
          asyncArrow: 'always'

    'arrow-parens':
      - 'error'
      - 'as-needed'

    'no-var': 'error'
    'prefer-const': 'error'
    'prefer-rest-params': 'error'
    'prefer-spread': 'error'
    'constructor-super': 'error'
    'for-direction': 'error'
    'getter-return': 'error'
    'no-async-promise-executor': 'error'
    'no-case-declarations': 'error'
    'no-class-assign': 'error'
    'no-compare-neg-zero': 'error'
    'no-cond-assign': 'error'
    'no-const-assign': 'error'
    'no-constant-condition': 'error'
    'no-control-regex': 'error'
    'no-debugger': 'error'
    'no-delete-var': 'error'
    'no-dupe-args': 'error'
    'no-dupe-keys': 'error'
    'no-duplicate-case': 'error'
    'no-empty': 'error'
    'no-empty-character-class': 'error'
    'no-empty-pattern': 'error'
    'no-ex-assign': 'error'
    'no-extra-boolean-cast': 'error'
    'no-extra-semi': 'error'
    'no-fallthrough': 'error'
    'no-func-assign': 'error'
    'no-global-assign': 'error'
    'no-inner-declarations': 'error'
    'no-invalid-regexp': 'error'
    'no-irregular-whitespace': 'error'
    'no-misleading-character-class': 'error'
    'no-mixed-spaces-and-tabs': 'error'
    'no-new-symbol': 'error'
    'no-obj-calls': 'error'
    'no-octal': 'error'
    'no-prototype-builtins': 'error'
    'no-redeclare': 'off'
    'no-regex-spaces': 'error'
    'no-self-assign': 'error'
    'no-shadow-restricted-names': 'error'
    'no-sparse-arrays': 'error'
    'no-this-before-super': 'error'
    'no-undef': 'error'
    'no-unexpected-multiline': 'error'
    'no-unreachable': 'error'
    'no-unsafe-finally': 'error'
    'no-unsafe-negation': 'error'
    'no-unused-labels': 'error'
    'no-useless-catch': 'error'
    'no-useless-escape': 'error'
    'no-with': 'error'
    'require-yield': 'error'
    'use-isnan': 'error'
    'valid-typeof': 'error'
    # 'comma-dangle': ['error', 'never']
    'dot-notation': 'error'
    'eol-last': 'error'
    eqeqeq:
        - 'error'
        - 'always'
        - 'null': 'ignore'

    'no-console': 'warn'
    'no-duplicate-imports': 'off'
    'no-multiple-empty-lines': 'error'
    'no-throw-literal': 'error'
    'no-trailing-spaces': 'error'
    'no-undef-init': 'error'
    'object-shorthand': 'error'
    'quote-props':
        - 'error'
        - 'consistent-as-needed'

    'spaced-comment': 'error'
    yoda: 'error'
    curly: 'error'
    'object-curly-spacing':
        - 'error'
        - 'always'

    'lines-between-class-members':
        - 'error'
        - 'always'
        - exceptAfterSingleLine: true

    'no-else-return': 'error'

    # always
    'padded-blocks':
      - 'error'
      - classes: 'never'

    'block-spacing':
        - 'error'
        - 'always'

    'space-before-blocks':
        - 'error'
        - 'always'

    'brace-style':
        - 'error'
        - '1tbs'
        - allowSingleLine: true

    'keyword-spacing':
        - 'error'
        - before: true
          after: true

    'space-in-parens':
        - 'error'
        - 'never'

# settings: {}
